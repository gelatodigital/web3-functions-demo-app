/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { StringDisplay, StringDisplayInterface } from "../StringDisplay";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [],
    name: "NewString",
    type: "event",
  },
  {
    inputs: [],
    name: "active",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "display",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_string",
        type: "string",
      },
    ],
    name: "setMockString",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_opsProxy",
        type: "address",
      },
    ],
    name: "setOpsProxy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_string",
        type: "string",
      },
    ],
    name: "setString",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "toggleChange",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526040518060400160405280600a81526020017f5a65726f2051756f746500000000000000000000000000000000000000000000815250600090816200004a919062000335565b506000600260146101000a81548160ff0219169083151502179055503480156200007357600080fd5b5033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200041c565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200013d57607f821691505b602082108103620001535762000152620000f5565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620001bd7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200017e565b620001c986836200017e565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600062000216620002106200020a84620001e1565b620001eb565b620001e1565b9050919050565b6000819050919050565b6200023283620001f5565b6200024a62000241826200021d565b8484546200018b565b825550505050565b600090565b6200026162000252565b6200026e81848462000227565b505050565b5b8181101562000296576200028a60008262000257565b60018101905062000274565b5050565b601f821115620002e557620002af8162000159565b620002ba846200016e565b81016020851015620002ca578190505b620002e2620002d9856200016e565b83018262000273565b50505b505050565b600082821c905092915050565b60006200030a60001984600802620002ea565b1980831691505092915050565b6000620003258383620002f7565b9150826002028217905092915050565b6200034082620000bb565b67ffffffffffffffff8111156200035c576200035b620000c6565b5b62000368825462000124565b620003758282856200029a565b600060209050601f831160018114620003ad576000841562000398578287015190505b620003a4858262000317565b86555062000414565b601f198416620003bd8662000159565b60005b82811015620003e757848901518255600182019150602085019450602081019050620003c0565b8683101562000407578489015162000403601f891682620002f7565b8355505b6001600288020188555050505b505050505050565b610aab806200042c6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806302fb0c5e146100675780630c1b7c1e146100855780637fcaf666146100a3578063d64526ef146100bf578063e71416c4146100db578063e9f22077146100f7575b600080fd5b61006f610101565b60405161007c91906103cb565b60405180910390f35b61008d610114565b60405161009a9190610476565b60405180910390f35b6100bd60048036038101906100b891906105e1565b6101a2565b005b6100d960048036038101906100d49190610688565b610271565b005b6100f560048036038101906100f091906105e1565b610345565b005b6100ff610384565b005b600260149054906101000a900460ff1681565b60008054610121906106e4565b80601f016020809104026020016040519081016040528092919081815260200182805461014d906106e4565b801561019a5780601f1061016f5761010080835404028352916020019161019a565b820191906000526020600020905b81548152906001019060200180831161017d57829003601f168201915b505050505081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610232576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022990610761565b60405180910390fd5b80600090816102419190610937565b507fa90d4b192723b04ce48bbabd0018e5a191d9cc65a0827aa77946fb2a4c87e6f760405160405180910390a150565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610301576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f890610a55565b60405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b80600090816103549190610937565b507fa90d4b192723b04ce48bbabd0018e5a191d9cc65a0827aa77946fb2a4c87e6f760405160405180910390a150565b600260149054906101000a900460ff1615600260146101000a81548160ff021916908315150217905550565b60008115159050919050565b6103c5816103b0565b82525050565b60006020820190506103e060008301846103bc565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610420578082015181840152602081019050610405565b60008484015250505050565b6000601f19601f8301169050919050565b6000610448826103e6565b61045281856103f1565b9350610462818560208601610402565b61046b8161042c565b840191505092915050565b60006020820190508181036000830152610490818461043d565b905092915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6104ee8261042c565b810181811067ffffffffffffffff8211171561050d5761050c6104b6565b5b80604052505050565b6000610520610498565b905061052c82826104e5565b919050565b600067ffffffffffffffff82111561054c5761054b6104b6565b5b6105558261042c565b9050602081019050919050565b82818337600083830152505050565b600061058461057f84610531565b610516565b9050828152602081018484840111156105a05761059f6104b1565b5b6105ab848285610562565b509392505050565b600082601f8301126105c8576105c76104ac565b5b81356105d8848260208601610571565b91505092915050565b6000602082840312156105f7576105f66104a2565b5b600082013567ffffffffffffffff811115610615576106146104a7565b5b610621848285016105b3565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106558261062a565b9050919050565b6106658161064a565b811461067057600080fd5b50565b6000813590506106828161065c565b92915050565b60006020828403121561069e5761069d6104a2565b5b60006106ac84828501610673565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806106fc57607f821691505b60208210810361070f5761070e6106b5565b5b50919050565b7f4e4f5420414c4c4f574544000000000000000000000000000000000000000000600082015250565b600061074b600b836103f1565b915061075682610715565b602082019050919050565b6000602082019050818103600083015261077a8161073e565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026107e37fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826107a6565b6107ed86836107a6565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600061083461082f61082a84610805565b61080f565b610805565b9050919050565b6000819050919050565b61084e83610819565b61086261085a8261083b565b8484546107b3565b825550505050565b600090565b61087761086a565b610882818484610845565b505050565b5b818110156108a65761089b60008261086f565b600181019050610888565b5050565b601f8211156108eb576108bc81610781565b6108c584610796565b810160208510156108d4578190505b6108e86108e085610796565b830182610887565b50505b505050565b600082821c905092915050565b600061090e600019846008026108f0565b1980831691505092915050565b600061092783836108fd565b9150826002028217905092915050565b610940826103e6565b67ffffffffffffffff811115610959576109586104b6565b5b61096382546106e4565b61096e8282856108aa565b600060209050601f8311600181146109a1576000841561098f578287015190505b610999858261091b565b865550610a01565b601f1984166109af86610781565b60005b828110156109d7578489015182556001820191506020850194506020810190506109b2565b868310156109f457848901516109f0601f8916826108fd565b8355505b6001600288020188555050505b505050505050565b7f4f4e4c595f4f574e455200000000000000000000000000000000000000000000600082015250565b6000610a3f600a836103f1565b9150610a4a82610a09565b602082019050919050565b60006020820190508181036000830152610a6e81610a32565b905091905056fea264697066735822122008d5572b98d3b2c2bb695358175f36dc13380215c7184db0f3b645e04ea3679f64736f6c63430008110033";

type StringDisplayConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StringDisplayConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StringDisplay__factory extends ContractFactory {
  constructor(...args: StringDisplayConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<StringDisplay> {
    return super.deploy(overrides || {}) as Promise<StringDisplay>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): StringDisplay {
    return super.attach(address) as StringDisplay;
  }
  override connect(signer: Signer): StringDisplay__factory {
    return super.connect(signer) as StringDisplay__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StringDisplayInterface {
    return new utils.Interface(_abi) as StringDisplayInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StringDisplay {
    return new Contract(address, _abi, signerOrProvider) as StringDisplay;
  }
}
